AWSTemplateFormatVersion: '2010-09-09'
Description: 'POC for Blogsite Stack'
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  PrivateSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  PublicSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.  
  WebServerCapacity:
    Default: '1'
    Description: The initial nuber of WebServer instances
    Type: Number
    MinValue: '1'
    MaxValue: '5'
    ConstraintDescription: must be between 1 and 5 EC2 instances.
  KeyPairName:
    Description: Name of an existing EC2 key pair to launch instances with
    Type: "AWS::EC2::KeyPair::KeyName"
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: must be a valid EC2 instance type.    
  WebsiteFilesS3Bucket:
    Type: String
    Description: Name of an existing S3 BuketName which contains Website files
Mappings:
  AWSInstanceType2Arch:
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    eu-west-1: 
      HVM64: ami-1a962263
    eu-west-2: 
      HVM64: ami-e7d6c983
Resources:
  InstanceRootRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  S3ReadOnlyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: 
            - "s3:Get*"
            - "s3:List*"
          Resource: "*"
      Roles:
      - !Ref InstanceRootRole
  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref InstanceRootRole  
  BlogsiteServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to server
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref BlogsiteALBSecurityGroup          
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "Blogsite-InstanceSecurityGroup"
        - Key: Team
          Value: DevOps
        - Key: Product
          Value: "Blogsite Soln"
        - Key: Component
          Value: "WebServer"
  BlogsiteALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Blogsite ALB Security Group"      
      VpcId: !Ref VpcId
      SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/32
      Tags:
        - Key: Name
          Value: "Blogsite-ALBSecurityGroup"
        - Key: Team
          Value: DevOps
        - Key: Product
          Value: "Blogsite Soln"
        - Key: Component
          Value: "Blogsite"
  BlogsiteLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType 
      IamInstanceProfile: !Ref WebInstanceProfile     
      SecurityGroups:
        - !Ref BlogsiteServerSecurityGroup
      KeyName: !Ref KeyPairName
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash 
          yum update -y
          yum install httpd -y
          service httpd start
          chkconfig httpd on
          aws s3 cp s3://${WebsiteFilesS3Bucket} /var/www/html --recursive  >> /var/www/html/com.log
  BlogsiteALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: "Blogsite-ApplicationLB"
      Subnets: !Ref PublicSubnets
      SecurityGroups:
        - !Ref BlogsiteALBSecurityGroup
      Tags:
        - Key: Name
          Value: "Blogsite"
        - Key: Team
          Value: DevOps
        - Key: Product
          Value: "Blogsite Soln"
        - Key: Component
          Value: "Blogsite"
  BlogsiteALBTargetGroup:
      Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
      Properties:
        Name: 'BlogsiteALBTargetGroup'
        Matcher:
            HttpCode: '200'
        HealthCheckIntervalSeconds: 20
        HealthCheckTimeoutSeconds: 10
        HealthyThresholdCount: 3
        UnhealthyThresholdCount: 5
        HealthCheckPort: '80'
        Port: '80'
        Protocol: HTTP
        TargetGroupAttributes:
            -   Key: stickiness.enabled
                Value: 'true'
            -   Key: stickiness.type
                Value: lb_cookie
        VpcId: !Ref VpcId
        Tags:
          - Key: Name
            Value: "Blogsite-WebServer"
          - Key: Team
            Value: DevOps
          - Key: Product
            Value: "Blogsite Soln"
          - Key: Component
            Value: "Blogsite"          
  BlogsiteALBListener:
      Type: 'AWS::ElasticLoadBalancingV2::Listener'
      Properties:
        DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref BlogsiteALBTargetGroup
        LoadBalancerArn: !Ref BlogsiteALB
        Port: '80'
        Protocol: HTTP
  BlogsiteAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      TargetGroupARNs: 
        - !Ref BlogsiteALBTargetGroup
      VPCZoneIdentifier: !Ref PublicSubnets
      LaunchConfigurationName: !Ref BlogsiteLaunchConfiguration
      MinSize: '1'
      MaxSize: '2'
      Tags:
        - Key: Name
          Value: "Blogsite-WebServer"
          PropagateAtLaunch: True
        - Key: Team
          Value: DevOps
          PropagateAtLaunch: True
        - Key: Product
          Value: "Blogsite Soln"
          PropagateAtLaunch: True
        - Key: Component
          Value: "Blogsite"
          PropagateAtLaunch: True
  BlogsiteScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref BlogsiteAutoScalingGroup
      Cooldown: '1'
      ScalingAdjustment: '1'
  CPUUsageAlarmForBlogsiteALB:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: '1'
      Statistic: Average
      Threshold: '10'
      AlarmDescription: Alarm if CPU too high or metric disappears indicating instance
        is down
      Period: '60'
      AlarmActions: 
        - !Ref BlogsiteScaleUpPolicy
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: BlogsiteAutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization
  HealthyHostCountAlarmForBlogsiteALB:
      Type: 'AWS::CloudWatch::Alarm'
      Properties:
          AlarmName: "Blogsite ALB Healthy Host Count"
          AlarmDescription:
              'Fn::Sub': 'The count of the number of healthy instances in Blogsite ALB.'
          MetricName: HealthyHostCount
          Namespace: AWS/ApplicationELB
          Statistic: Average
          Period: '60'
          EvaluationPeriods: '2'
          Threshold: '1'
          Dimensions:
              -   Name: LoadBalancer
                  Value:
                      'Fn::GetAtt':
                          - BlogsiteALB
                          - LoadBalancerFullName
              -   Name: TargetGroup
                  Value:
                      'Fn::GetAtt':
                          - BlogsiteALBTargetGroup
                          - TargetGroupFullName
          ComparisonOperator: LessThanThreshold        
Outputs:
  BlogsiteLBDNSName:
    Description: The DNSName of the Blogsite load balancer
    Value: !GetAtt BlogsiteALB.DNSName
  BlogsiteAutoScalingGroupID:
    Description: ID of the Blogsite AutoScalingGroup
    Value: !Ref BlogsiteAutoScalingGroup

